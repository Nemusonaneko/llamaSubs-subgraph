// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DeployFlatRateERC20 extends ethereum.Event {
  get params(): DeployFlatRateERC20__Params {
    return new DeployFlatRateERC20__Params(this);
  }
}

export class DeployFlatRateERC20__Params {
  _event: DeployFlatRateERC20;

  constructor(event: DeployFlatRateERC20) {
    this._event = event;
  }

  get deployedContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get currentPeriod(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get periodDuration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DeployFlatRateERC20NonRefundable extends ethereum.Event {
  get params(): DeployFlatRateERC20NonRefundable__Params {
    return new DeployFlatRateERC20NonRefundable__Params(this);
  }
}

export class DeployFlatRateERC20NonRefundable__Params {
  _event: DeployFlatRateERC20NonRefundable;

  constructor(event: DeployFlatRateERC20NonRefundable) {
    this._event = event;
  }

  get deployedContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LlamaSubsFactory__deployFlatRateERC20InputTiersStruct extends ethereum.Tuple {
  get costPerPeriod(): BigInt {
    return this[0].toBigInt();
  }

  get token(): Address {
    return this[1].toAddress();
  }
}

export class LlamaSubsFactory__deployFlatRateERC20NonRefundableInputSubsStruct extends ethereum.Tuple {
  get costOfSub(): BigInt {
    return this[0].toBigInt();
  }

  get duration(): BigInt {
    return this[1].toBigInt();
  }

  get token(): Address {
    return this[2].toAddress();
  }
}

export class LlamaSubsFactory extends ethereum.SmartContract {
  static bind(address: Address): LlamaSubsFactory {
    return new LlamaSubsFactory("LlamaSubsFactory", address);
  }

  deployFlatRateERC20(
    _currentPeriod: BigInt,
    _periodDuration: BigInt,
    tiers: Array<LlamaSubsFactory__deployFlatRateERC20InputTiersStruct>
  ): Address {
    let result = super.call(
      "deployFlatRateERC20",
      "deployFlatRateERC20(uint256,uint256,(uint224,address)[]):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_currentPeriod),
        ethereum.Value.fromUnsignedBigInt(_periodDuration),
        ethereum.Value.fromTupleArray(tiers)
      ]
    );

    return result[0].toAddress();
  }

  try_deployFlatRateERC20(
    _currentPeriod: BigInt,
    _periodDuration: BigInt,
    tiers: Array<LlamaSubsFactory__deployFlatRateERC20InputTiersStruct>
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployFlatRateERC20",
      "deployFlatRateERC20(uint256,uint256,(uint224,address)[]):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_currentPeriod),
        ethereum.Value.fromUnsignedBigInt(_periodDuration),
        ethereum.Value.fromTupleArray(tiers)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deployFlatRateERC20NonRefundable(
    subs: Array<
      LlamaSubsFactory__deployFlatRateERC20NonRefundableInputSubsStruct
    >
  ): Address {
    let result = super.call(
      "deployFlatRateERC20NonRefundable",
      "deployFlatRateERC20NonRefundable((uint208,uint40,address)[]):(address)",
      [ethereum.Value.fromTupleArray(subs)]
    );

    return result[0].toAddress();
  }

  try_deployFlatRateERC20NonRefundable(
    subs: Array<
      LlamaSubsFactory__deployFlatRateERC20NonRefundableInputSubsStruct
    >
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployFlatRateERC20NonRefundable",
      "deployFlatRateERC20NonRefundable((uint208,uint40,address)[]):(address)",
      [ethereum.Value.fromTupleArray(subs)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nonrefundableImpl(): Address {
    let result = super.call(
      "nonrefundableImpl",
      "nonrefundableImpl():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_nonrefundableImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nonrefundableImpl",
      "nonrefundableImpl():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  refundableImpl(): Address {
    let result = super.call("refundableImpl", "refundableImpl():(address)", []);

    return result[0].toAddress();
  }

  try_refundableImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "refundableImpl",
      "refundableImpl():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _nonrefundableImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _refundableImpl(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployFlatRateERC20Call extends ethereum.Call {
  get inputs(): DeployFlatRateERC20Call__Inputs {
    return new DeployFlatRateERC20Call__Inputs(this);
  }

  get outputs(): DeployFlatRateERC20Call__Outputs {
    return new DeployFlatRateERC20Call__Outputs(this);
  }
}

export class DeployFlatRateERC20Call__Inputs {
  _call: DeployFlatRateERC20Call;

  constructor(call: DeployFlatRateERC20Call) {
    this._call = call;
  }

  get _currentPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _periodDuration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get tiers(): Array<DeployFlatRateERC20CallTiersStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      DeployFlatRateERC20CallTiersStruct
    >();
  }
}

export class DeployFlatRateERC20Call__Outputs {
  _call: DeployFlatRateERC20Call;

  constructor(call: DeployFlatRateERC20Call) {
    this._call = call;
  }

  get deployedContract(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DeployFlatRateERC20CallTiersStruct extends ethereum.Tuple {
  get costPerPeriod(): BigInt {
    return this[0].toBigInt();
  }

  get token(): Address {
    return this[1].toAddress();
  }
}

export class DeployFlatRateERC20NonRefundableCall extends ethereum.Call {
  get inputs(): DeployFlatRateERC20NonRefundableCall__Inputs {
    return new DeployFlatRateERC20NonRefundableCall__Inputs(this);
  }

  get outputs(): DeployFlatRateERC20NonRefundableCall__Outputs {
    return new DeployFlatRateERC20NonRefundableCall__Outputs(this);
  }
}

export class DeployFlatRateERC20NonRefundableCall__Inputs {
  _call: DeployFlatRateERC20NonRefundableCall;

  constructor(call: DeployFlatRateERC20NonRefundableCall) {
    this._call = call;
  }

  get subs(): Array<DeployFlatRateERC20NonRefundableCallSubsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      DeployFlatRateERC20NonRefundableCallSubsStruct
    >();
  }
}

export class DeployFlatRateERC20NonRefundableCall__Outputs {
  _call: DeployFlatRateERC20NonRefundableCall;

  constructor(call: DeployFlatRateERC20NonRefundableCall) {
    this._call = call;
  }

  get deployedContract(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DeployFlatRateERC20NonRefundableCallSubsStruct extends ethereum.Tuple {
  get costOfSub(): BigInt {
    return this[0].toBigInt();
  }

  get duration(): BigInt {
    return this[1].toBigInt();
  }

  get token(): Address {
    return this[2].toAddress();
  }
}
